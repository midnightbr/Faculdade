<?xml version="1.0"?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ License: GNU Lesser General Public License (LGPL), version 2.1 or later.
  ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
  -->
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<!--
     
-->

<hibernate-mapping package="org.hibernate.test.extralazy">
	
	<class name="Group" table="groups_">
		<id name="name"/>
		<map name="users" cascade="persist" 
				table="group_user" lazy="extra">
			<key column="groupName"/>
			<map-key formula="lower(personName)" type="string"/>
			<many-to-many column="personName" class="User"/>
		</map>
	</class>
	
	<class name="User" table="users">
		<id name="name"/>
		<property name="password" column="`password`"/>
		<map name="session" lazy="extra" 
				cascade="persist,save-update,delete,delete-orphan">
			<key column="userName" not-null="true"/>
			<map-key column="name" type="string"/>
			<one-to-many class="SessionAttribute"/>
		</map>
		<set name="documents" inverse="true" 
				lazy="extra" cascade="all,delete-orphan">
			<key column="owner"/>
			<one-to-many class="Document"/>
		</set>
	</class>
	
	<class name="Document" table="documents">
		<id name="title" column="`title`"/>
		<property name="content" type="text"/>
		<many-to-one name="owner" not-null="true"/>
	</class>
	
	<class name="SessionAttribute" table="session_attributes">
		<id name="id" access="field">
			<generator class="native"/>
		</id>
		<property name="name" not-null="true" 
				insert="false" update="false"/>
		<property name="stringData"/>
		<property name="objectData"/>
	</class>
	
	<sql-query name="userSessionData">
		<return alias="u" class="User"/>
		<return-join alias="s" property="u.session"/>
		select 
			lower(u.name) as {u.name}, lower(u."password") as {u.password}, 
			lower(s.userName) as {s.key}, lower(s.name) as {s.index}, s.id as {s.element}, 
			{s.element.*}
		from users u 
		join session_attributes s on lower(s.userName) = lower(u.name)
		where u.name like :uname
	</sql-query>	
	

</hibernate-mapping>
